// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/central/'
        }
        google()
        maven { url 'https://jitpack.io' }
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.4"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    // 这个 id 就是在 versionPlugin 文件夹下 build.gradle 文件内定义的id
//    id "auto-track" apply false
//    id "thread-hook" apply false
    id "timeLog" apply false
    id "doubleTap" apply false
    id "multi-plugin" apply false
}

allprojects {
//    repositories {
//        maven {
//            url 'https://maven.aliyun.com/repository/central/'
//        }
//        google()
//    }
    configurations.all { Configuration c ->
        c.resolutionStrategy {
            dependencySubstitution {
                all { DependencySubstitution dependency ->
                    if (dependency.requested instanceof ModuleComponentSelector) {
                        def p = rootProject.allprojects.find { p -> p.group == dependency.requested.group && p.name == dependency.requested.module }
                        if (p != null) {
                            dependency.useTarget(project(p.path), 'selected local project')
                        }
                    }
                }
            }
        }
    }
    afterEvaluate {
        if (project.plugins.hasPlugin('com.android.library') || project.plugins.hasPlugin('com.android.application')) {
            def android = project.extensions.getByName('android')
            android.compileOptions {
                sourceCompatibility JavaVersion.VERSION_11
                targetCompatibility JavaVersion.VERSION_11
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}